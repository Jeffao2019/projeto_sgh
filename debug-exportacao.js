// Teste espec√≠fico para debug do bot√£o exportar
const axios = require('axios');

const API_BASE = 'http://localhost:3000';

async function debugBotaoExportar() {
  console.log('üîç DEBUG: Investigando problema do bot√£o exportar...\n');

  try {
    // 1. Login
    console.log('1Ô∏è‚É£ Fazendo login...');
    const loginResponse = await axios.post(`${API_BASE}/auth/login`, {
      email: 'dr.teste.agendamento@teste.com',
      password: '123456'
    });
    
    const token = loginResponse.data.token;
    console.log('‚úÖ Login OK');

    // 2. Buscar prontu√°rio espec√≠fico com dados completos
    console.log('\n2Ô∏è‚É£ Buscando prontu√°rio espec√≠fico...');
    const prontuariosResponse = await axios.get(`${API_BASE}/prontuarios/with-relations`, {
      headers: { Authorization: `Bearer ${token}` }
    });
    
    const prontuarios = prontuariosResponse.data;
    console.log(`üìã Total de prontu√°rios: ${prontuarios.length}`);

    if (prontuarios.length === 0) {
      console.log('‚ùå Nenhum prontu√°rio encontrado');
      return;
    }

    // 3. Pegar um prontu√°rio para teste detalhado
    const prontuario = prontuarios[0];
    console.log('\n3Ô∏è‚É£ Dados do prontu√°rio selecionado:');
    console.log('üìã ID:', prontuario.id);
    console.log('üë§ Paciente:', {
      id: prontuario.paciente?.id,
      nome: prontuario.paciente?.nome,
      cpf: prontuario.paciente?.cpf,
      email: prontuario.paciente?.email,
      telefone: prontuario.paciente?.telefone
    });
    console.log('üë®‚Äç‚öïÔ∏è M√©dico:', {
      id: prontuario.medico?.id,
      nome: prontuario.medico?.nome
    });
    console.log('üìÖ Data Consulta:', prontuario.dataConsulta);
    console.log('üè• Diagn√≥stico:', prontuario.diagnostico);
    console.log('üìù Anamnese:', prontuario.anamnese ? 'Presente' : 'Ausente');
    console.log('üîç Exame F√≠sico:', prontuario.exameFisico ? 'Presente' : 'Ausente');
    console.log('üíä Prescri√ß√£o:', prontuario.prescricao ? 'Presente' : 'Ausente');

    // 4. Testar se falta algum dado essencial
    console.log('\n4Ô∏è‚É£ Verificando integridade dos dados:');
    
    const problemas = [];
    if (!prontuario.paciente) problemas.push('‚ùå Paciente n√£o carregado');
    if (!prontuario.medico) problemas.push('‚ùå M√©dico n√£o carregado');
    if (!prontuario.paciente?.nome) problemas.push('‚ùå Nome do paciente ausente');
    if (!prontuario.paciente?.cpf) problemas.push('‚ùå CPF do paciente ausente');
    if (!prontuario.diagnostico) problemas.push('‚ùå Diagn√≥stico ausente');
    
    if (problemas.length > 0) {
      console.log('üö® PROBLEMAS ENCONTRADOS:');
      problemas.forEach(p => console.log(p));
    } else {
      console.log('‚úÖ Dados completos para exporta√ß√£o');
    }

    // 5. Simular chamada da API individual se necess√°rio
    console.log('\n5Ô∏è‚É£ Testando busca individual do prontu√°rio...');
    try {
      const prontuarioIndividual = await axios.get(`${API_BASE}/prontuarios/${prontuario.id}/with-relations`, {
        headers: { Authorization: `Bearer ${token}` }
      });
      console.log('‚úÖ Busca individual com rela√ß√µes OK');
      console.log('üîç Dados individuais:', {
        temPaciente: !!prontuarioIndividual.data.paciente,
        temMedico: !!prontuarioIndividual.data.medico,
        nomePaciente: prontuarioIndividual.data.paciente?.nome,
        nomeMedico: prontuarioIndividual.data.medico?.nome,
        emailPaciente: prontuarioIndividual.data.paciente?.email
      });
    } catch (error) {
      console.log('‚ùå Erro na busca individual:', error.message);
    }

    // 6. Verificar se jsPDF est√° dispon√≠vel no ambiente
    console.log('\n6Ô∏è‚É£ Simulando gera√ß√£o de PDF...');
    console.log('üîß Dados que seriam passados para o PDF generator:');
    console.log({
      id: prontuario.id,
      paciente: {
        nome: prontuario.paciente?.nome || 'Nome n√£o dispon√≠vel',
        cpf: prontuario.paciente?.cpf || 'CPF n√£o dispon√≠vel',
        email: prontuario.paciente?.email || 'Email n√£o dispon√≠vel'
      },
      medico: {
        nome: prontuario.medico?.nome || 'M√©dico n√£o dispon√≠vel'
      },
      dataConsulta: prontuario.dataConsulta,
      diagnostico: prontuario.diagnostico || 'Diagn√≥stico n√£o dispon√≠vel'
    });

    console.log('\nüéØ POSS√çVEIS CAUSAS DO PROBLEMA:');
    console.log('1. jsPDF n√£o carregado no frontend');
    console.log('2. Erro de console no navegador');
    console.log('3. Dados incompletos sendo passados');
    console.log('4. Problema no contexto de execu√ß√£o');
    
    console.log('\nüîß PR√ìXIMOS PASSOS PARA DEBUG:');
    console.log('1. Abrir DevTools (F12) no navegador');
    console.log('2. Ir para Console');
    console.log('3. Clicar no bot√£o exportar');
    console.log('4. Verificar erros em vermelho');
    console.log('5. Verificar se h√° mensagens sobre jsPDF');

  } catch (error) {
    console.error('‚ùå Erro no debug:', error.message);
    if (error.response) {
      console.error('üìù Detalhes:', error.response.data);
    }
  }
}

debugBotaoExportar();
